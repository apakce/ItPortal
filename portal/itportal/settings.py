"""
Django settings for itportal project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from admin_account.encrypt_decode import encrypt_and_decode

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'liwf=$om+=sf)!fe-^z$*kgv05r^wi1db)t1)p0w1@o)yq4mg4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'project.apps.ProjectConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_account.views.LoginMiddleware',
]

ROOT_URLCONF = 'itportal.urls'

#不需要验证登录的
Identity_Exception = ['/userlogin/','/portal/','/api/','favicon.ico','/jzhtml/','/IFadmin/','/loginuser/','/dfs_permission/','/showcountman/']

#admin专用地址
Identity_Exception_admin = ['/adminconfig/','/mysqllinktest/','/delmysqllink/','/deliislink/','/delitgroup/','/deladlink/','/delexlink/','/iislinktest/','/adlinktest/','/exlinktest/','/itgroupsearch/',
    'basisite','/testsend/','/testaip/',#'/addadips/','/deladdadips/'
    '/pwdremindertips/','/changeadminpwd/', '/saveonlymanger/', '/savetitle/', '/delonlymanger/', '/deloutapimysql/','/delapimysql/','/deltitle/', '/deluserphoneapimysql/','/delsendapi/','/delconfigsql/', '/delsendmysql/','/apiintest/','/usertophone/', '/sendtpmessage/',]

#ITPortal...123
administratorpassword = 'pbkdf2_sha256$30000$3RE82hsihLNI$h54De5XvONmChEo/6JOkUtqw9VJxgyzDpr2+zVA4NYE='

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'itportal.wsgi.application'


PASSWORD_HASHERS = (

    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
)

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
inifilepath =  os.path.join(BASE_DIR, 'admin_account')


try:
    from adapi.dbinfo import searchsendmail
    message = searchsendmail()
    if message != None:
        mailcount = message['mailcount']
        password = message['password']
        mysqlPasswordvalue = encrypt_and_decode().decrypted_text(password)
        mailserver = message['mailserver']
        mailaddress = message['mailaddress']
        #Email设置
        EMAIL_BACKEND = u'django.core.mail.backends.smtp.EmailBackend'
        EMAIL_HOST= mailserver
        EMAIL_PORT= 25
        EMAIL_HOST_USER = mailcount
        EMAIL_HOST_PASSWORD = mysqlPasswordvalue
        #EMAIL_USE_TLS = True #开启安全链接
        SERVER_EMAIL = mailaddress
        DEFAULT_FROM_EMAIL = mailaddress #设置发件人
    else:
        pass
except Exception as e:
    print(e)